provider "google" {
  project = "your-project-id"  # Replace with your project ID
  region  = "us-central1"       # Choose your preferred region
}

# Create a VPC network
resource "google_compute_network" "vpc_network" {
  name = "my-vpc-network"
  auto_create_subnetworks = false
}

# Create a subnet within the VPC
resource "google_compute_subnetwork" "subnetwork" {
  name          = "my-subnetwork"
  ip_cidr_range = "10.0.1.0/24"
  region        = "us-central1"
  network       = google_compute_network.vpc_network.name
}

# Create a Firewall rule to allow SSH and HTTP traffic
resource "google_compute_firewall" "firewall_rule" {
  name    = "allow-ssh-http"
  network = google_compute_network.vpc_network.name

  allow {
    protocol = "tcp"
    ports    = ["22", "80"]
  }

  source_ranges = ["0.0.0.0/0"]  # Allow traffic from anywhere
}

# Create a Google Compute Engine instance
resource "google_compute_instance" "vm_instance" {
  name         = "example-instance"
  machine_type = "f1-micro"
  zone         = "us-central1-a"

  boot_disk {
    initialize_params {
      image = "debian-cloud/debian-11"  # Change to your desired image
    }
  }

  network_interface {
    network    = google_compute_network.vpc_network.name
    subnetwork = google_compute_subnetwork.subnetwork.name

    access_config {
      // Allocate a public IP address
    }
  }

  metadata_startup_script = <<-EOF
              #!/bin/bash
              apt-get update
              apt-get install -y apache2
              systemctl start apache2
              systemctl enable apache2
              echo "<h1>Hello, World!</h1>" > /var/www/html/index.html
              EOF
}

# Create a Cloud Storage bucket
resource "google_storage_bucket" "my_bucket" {
  name     = "my-unique-bucket-name"  # Ensure this name is globally unique
  location = "US"
  storage_class = "STANDARD"
}
